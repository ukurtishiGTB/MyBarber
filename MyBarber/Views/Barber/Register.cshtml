@model MyBarber.ViewModels.BarberRegisterViewModel

// Add these styles in your existing style section
<style>
    body {
        background-color: #f0f8ff;
        background-image:
            linear-gradient(120deg, rgba(33, 150, 243, 0.05), rgba(3, 169, 244, 0.05)),
            url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='rgba(33, 150, 243, 0.03)'%3E%3Cpath d='M25 50 C25 45 30 40 35 40 L45 50 L35 60 C30 60 25 55 25 50 Z'/%3E%3Cpath d='M75 50 C75 45 70 40 65 40 L55 50 L65 60 C70 60 75 55 75 50 Z'/%3E%3C/g%3E%3C/svg%3E");
        min-height: 100vh;
    }

    .register-container {
        max-width: 600px;
        margin: 50px auto;
        padding: 40px;
        background: linear-gradient(145deg, rgba(255, 255, 255, 0.9), rgba(230, 243, 255, 0.9));
        backdrop-filter: blur(10px);
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(135, 206, 250, 0.2);
        position: relative;
    }

    .register-title {
        font-size: 2.5rem;
        background: linear-gradient(45deg, #2196F3, #03A9F4);
        -webkit-background-clip: text;
        background-clip: text;
        color: transparent;
        margin-bottom: 40px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 2px;
        text-align: center;
        position: relative;
    }

    .register-title::after {
        content: '';
        position: absolute;
        bottom: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 80px;
        height: 3px;
        background: linear-gradient(90deg, #2196F3, #03A9F4);
        border-radius: 2px;
    }

    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        font-weight: 600;
        color: #2196F3;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .form-input {
        width: 100%;
        padding: 12px 15px;
        border: 2px solid rgba(33, 150, 243, 0.1);
        border-radius: 10px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.9);
    }

    .form-input:focus {
        outline: none;
        border-color: #2196F3;
        box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);
    }

    .form-textarea {
        min-height: 100px;
        resize: vertical;
    }

    .submit-btn {
        width: 100%;
        padding: 15px;
        background: linear-gradient(145deg, #2196F3, #03A9F4);
        color: white;
        border: none;
        border-radius: 10px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-top: 20px;
    }

    .submit-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(33, 150, 243, 0.3);
    }

    .scissors-decoration {
        position: absolute;
        font-size: 1.5rem;
        opacity: 0.1;
    }

    .scissors-1 { top: 20px; left: 20px; transform: rotate(-45deg); }
    .scissors-2 { top: 20px; right: 20px; transform: rotate(45deg); }
    .scissors-3 { bottom: 20px; left: 20px; transform: rotate(-135deg); }
    .scissors-4 { bottom: 20px; right: 20px; transform: rotate(135deg); }
</style>

<div class="register-container">
    <div class="scissors-decoration scissors-1">✂️</div>
    <div class="scissors-decoration scissors-2">✂️</div>
    <div class="scissors-decoration scissors-3">✂️</div>
    <div class="scissors-decoration scissors-4">✂️</div>

    <h2 class="register-title">Join Our Team</h2>

    <form method="post">
        <div class="form-group">
            <label class="form-label" for="name">Name</label>
            <input class="form-input" type="text" id="name" name="Name" required placeholder="Your full name">
        </div>

        <div class="form-group">
            <label class="form-label" for="email">Email</label>
            <input class="form-input" type="email" id="email" name="Email" required placeholder="Your email address">
        </div>

        <div class="form-group">
            <label class="form-label" for="password">Password</label>
            <input class="form-input" type="password" id="password" name="Password" required placeholder="Choose a secure password">
        </div>

        <div class="form-group location-group">
            <label class="form-label" for="location">Location</label>
            <div class="location-input-wrapper">
                <input class="form-input" type="text" id="location" name="Location" required placeholder="Your salon location">
                <button type="button" id="mapToggle" class="map-toggle">
                    <i class="fas fa-map-marker-alt"></i>
                </button>
            </div>
            <input type="hidden" id="longitude" name="Longitude">
            <input type="hidden" id="latitude" name="Latitude">
            <div id="map-container" class="map-container" style="display: none;">
                <div id="map" class="location-map"></div>
            </div>
        </div>

        <div class="form-group">
            <label class="form-label" for="phone">Phone Number</label>
            <input class="form-input" type="tel" id="phone" name="PhoneNumber" required placeholder="Your contact number">
        </div>

        <div class="form-group">
            <label class="form-label" for="pricing">Pricing (den)</label>
            <input class="form-input" type="number" id="pricing" name="Pricing" step="50" required placeholder="Your service price">
        </div>

        <div class="form-group">
            <label class="form-label" for="services">Services</label>
            <textarea class="form-input form-textarea" id="services" name="Services" placeholder="Describe your services and specialties"></textarea>
        </div>

        <button type="submit" class="submit-btn">Create Barber Account</button>
    </form>
</div>

// Replace the entire Scripts section with this updated version
@section Scripts {
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.min.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v5.0.0/mapbox-gl-geocoder.css" type="text/css">
    <script src="https://kit.fontawesome.com/your-font-awesome-kit.js" crossorigin="anonymous"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            mapboxgl.accessToken = 'pk.eyJ1IjoiYXJ0aGhoIiwiYSI6ImNtNmdwbG1ldjAzemMyanNiMm0xOTJtZDkifQ.JtmkzmQKTTPH6kcgXU-FzA';

            // Initialize the map
            const map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v12',
                center: [21.4254, 41.9965], // Skopje coordinates
                zoom: 12
            });

            // Create a marker
            const marker = new mapboxgl.Marker({
                draggable: true
            }).setLngLat([21.4254, 41.9965]);

            // Create the geocoder
            const geocoder = new MapboxGeocoder({
                accessToken: mapboxgl.accessToken,
                mapboxgl: mapboxgl,
                marker: false,
                placeholder: 'Search for your location',
                countries: 'mk', // Limit to Macedonia
                types: 'address,poi' // Search for addresses and points of interest
            });

            // Add geocoder to the map
            document.getElementById('location').style.display = 'none'; // Hide the original input
            document.querySelector('.location-input-wrapper').insertBefore(
                geocoder.onAdd(map), 
                document.getElementById('mapToggle')
            );

            // Handle location selection
            geocoder.on('result', function(event) {
                const coords = event.result.center;
                marker.setLngLat(coords).addTo(map);
                map.flyTo({ center: coords, zoom: 15 });
                updateLocation(event.result.place_name, coords[0], coords[1]);
            });

            // Handle marker drag
            marker.on('dragend', function() {
                const lngLat = marker.getLngLat();
                reverseGeocode(lngLat.lng, lngLat.lat);
            });

            // Toggle map visibility
            document.getElementById('mapToggle').addEventListener('click', function() {
                const mapContainer = document.getElementById('map-container');
                const isVisible = mapContainer.style.display !== 'none';
                mapContainer.style.display = isVisible ? 'none' : 'block';
                if (!isVisible) {
                    map.resize();
                    marker.addTo(map);
                }
            });

            // Update location inputs
            function updateLocation(placeName, lng, lat) {
                document.getElementById('location').value = placeName;
                document.getElementById('longitude').value = lng;
                document.getElementById('latitude').value = lat;
            }

            // Reverse geocoding
            function reverseGeocode(lng, lat) {
                fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${lng},${lat}.json?access_token=${mapboxgl.accessToken}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.features && data.features.length > 0) {
                            updateLocation(data.features[0].place_name, lng, lat);
                        }
                    });
            }
        });
    </script>
}```
