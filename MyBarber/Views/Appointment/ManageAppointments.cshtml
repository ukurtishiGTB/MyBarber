@model List<Appointment>

<div class="dashboard-container">
    <div class="dashboard-header">
        <div class="header-content">
            <i class="fas fa-calendar-alt"></i>
            <h2>Appointment Dashboard</h2>
            <p class="subtitle">Manage your upcoming appointments</p>
        </div>
        <div class="stats-cards">
            <div class="stat-card">
                <i class="fas fa-clock"></i>
                <div class="stat-info">
                    <span class="stat-value">@Model.Count(a => a.Status.ToString() == "Pending")</span>
                    <span class="stat-label">Pending</span>
                </div>
            </div>
            <div class="stat-card">
                <i class="fas fa-check-circle"></i>
                <div class="stat-info">
                    <span class="stat-value">@Model.Count(a => a.Status.ToString() == "Accepted")</span>
                    <span class="stat-label">Accepted</span>
                </div>
            </div>
            <div class="stat-card">
                <i class="fas fa-times-circle"></i>
                <div class="stat-info">
                    <span class="stat-value">@Model.Count(a => a.Status.ToString() == "Rejected")</span>
                    <span class="stat-label">Rejected</span>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-calendar-times"></i>
            </div>
            <h3>No Appointments Yet</h3>
            <p>You don't have any appointments to manage at the moment.</p>
        </div>
    }
    else
    {
        <div class="appointments-timeline">
            @foreach (var appointment in Model.OrderBy(a => a.AppointmentDate))
            {
                <div class="appointment-card @appointment.Status.ToString().ToLower()">
                    <div class="time-indicator">
                        <div class="date">@appointment.AppointmentDate.ToString("MMM dd")</div>
                        <div class="time">@appointment.AppointmentDate.ToString("hh:mm tt")</div>
                    </div>

                    <div class="appointment-content">
                        <div class="client-info">
                            <div class="client-avatar">
                                <i class="fas fa-user"></i>
                            </div>
                            <div class="client-details">
                                <h3>@appointment.User.Name</h3>
                                <span class="status-badge">@appointment.Status</span>
                            </div>
                        </div>

                        <div class="action-buttons">
                            @if (appointment.Status.ToString() == "Pending")
                            {
                                <form asp-action="Accepted" method="post" class="action-form">
                                    <input type="hidden" name="appointmentId" value="@appointment.Id" />
                                    <button type="submit" class="btn-accept">
                                        <i class="fas fa-check"></i>
                                        Accept
                                    </button>
                                </form>
                                <form asp-action="Rejected" method="post" class="action-form">
                                    <input type="hidden" name="appointmentId" value="@appointment.Id" />
                                    <button type="submit" class="btn-reject">
                                        <i class="fas fa-times"></i>
                                        Reject
                                    </button>
                                </form>
                            }
                            else
                            {
                                <span class="status-text @appointment.Status.ToString().ToLower()">
                                    @(appointment.Status.ToString() == "Accepted" ? "Appointment Confirmed" : "Appointment Declined")
                                </span>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .dashboard-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .dashboard-header {
        background: linear-gradient(135deg, #2193b0, #6dd5ed);
        padding: 3rem 2rem;
        border-radius: 20px;
        color: white;
        margin-bottom: 2rem;
        box-shadow: 0 10px 20px rgba(33, 147, 176, 0.2);
    }

    .header-content {
        text-align: center;
        margin-bottom: 2rem;
    }

    .header-content i {
        font-size: 3.5rem;
        margin-bottom: 1rem;
    }

    .header-content h2 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
    }

    .subtitle {
        opacity: 0.9;
        font-size: 1.1rem;
    }

    .stats-cards {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        padding: 1.5rem;
        border-radius: 15px;
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: transform 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
    }

    .stat-card i {
        font-size: 2rem;
    }

    .stat-info {
        display: flex;
        flex-direction: column;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
    }

    .stat-label {
        font-size: 0.9rem;
        opacity: 0.9;
    }

    .appointments-timeline {
        display: grid;
        gap: 1.5rem;
    }

    .appointment-card {
        background: white;
        border-radius: 15px;
        padding: 1.5rem;
        display: flex;
        gap: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .appointment-card::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 4px;
    }

    .appointment-card.pending::before { background: #f1c40f; }
    .appointment-card.accepted::before { background: #2ecc71; }
    .appointment-card.rejected::before { background: #e74c3c; }

    .appointment-card:hover {
        transform: translateX(5px);
    }

    .time-indicator {
        text-align: center;
        min-width: 100px;
    }

    .date {
        font-size: 1.2rem;
        font-weight: 600;
        color: #333;
    }

    .time {
        color: #666;
        font-size: 0.9rem;
    }

    .appointment-content {
        flex: 1;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }

    .client-info {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .client-avatar {
        width: 50px;
        height: 50px;
        background: #f8f9fa;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #2193b0;
    }

    .client-details h3 {
        margin: 0;
        color: #333;
    }

    .status-badge {
        font-size: 0.8rem;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        background: #f8f9fa;
        color: #666;
    }

    .action-buttons {
        display: flex;
        gap: 1rem;
    }

    .action-form button {
        border: none;
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

    .btn-accept {
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        color: white;
    }

    .btn-reject {
        background: linear-gradient(135deg, #e74c3c, #c0392b);
        color: white;
    }

    .action-form button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

    .status-text {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
    }

    .status-text.accepted {
        background: #d4edda;
        color: #155724;
    }

    .status-text.rejected {
        background: #f8d7da;
        color: #721c24;
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .empty-icon {
        font-size: 4rem;
        color: #2193b0;
        margin-bottom: 1.5rem;
    }

    .empty-state h3 {
        color: #333;
        margin-bottom: 0.5rem;
    }

    .empty-state p {
        color: #666;
    }

    @@media (max-width: 768px) {
    .dashboard-header {
        padding: 2rem 1rem;
    }

    .stats-cards {
        grid-template-columns: 1fr;
    }

    .appointment-card {
        flex-direction: column;
        gap: 1rem;
    }

    .appointment-content {
        flex-direction: column;
        align-items: flex-start;
    }

    .action-buttons {
        width: 100%;
        justify-content: center;
    }
    }
</style>